!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.padEvents=n():e.padEvents=n()}(this,function(){return function(e){function n(r){if(t[r])return t[r].exports;var a=t[r]={exports:{},id:r,loaded:!1};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}var t={};return n.m=e,n.c=t,n.p="",n(0)}([function(e,n){"use strict";var t=function(){function e(){var t=function(e){var t=a[e];0===s[e].length&&(s[e]=t.axes.map(function(e){return l(e)}),i[e]=t.axes.map(function(n,t){return p(n,s[e][t])}));for(var u in t.axes){var x=p(t.axes[u],s[e][u]);x!==i[e][u]&&(console.log(x,u),i[e][u]=x)}for(var c in t.buttons){var f=t.buttons[c].pressed,m=d[e][c];m&&o[e][m]!==f&&(o[e][m]=f,window.dispatchEvent(new CustomEvent(r[m][f?"pressed":"released"],{detail:{controllerIndex:e}})),console.log(i[e],t.axes.map(function(n,t){return p(n,s[e][t])}))),n&&f&&!m&&n(c)}};for(var u in a)t(u);requestAnimationFrame(e)}var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(e){return console.warn("unmapped button index",e)},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{0:"x",1:"a",2:"b",3:"y",9:"start",8:"select",5:"rt-shoulder",7:"rb-shoulder",4:"lt-shoulder",6:"lb-shoulder",10:"l-axis",11:"r-axis",12:"up",13:"down",14:"left",15:"right"},r=["a","b","x","y","start","select","rt-shoulder","rb-shoulder","lt-shoulder","lb-shoulder","l-axis","r-axis","l-axis-left","l-axis-right","l-axis-up","l-axis-down","r-axis-left","r-axis-right","r-axis-up","r-axis-down"].reduce(function(e,n){return e[n]={pressed:"gamepad-"+n+"-pressed",released:"gamepad-"+n+"-released"},e},{}),a={},d={},o={},i={},s={},u=function(e){return Object.keys(e).reduce(function(n,t){return n[e[t]]=!1,n},{})},l=function(e){return Math.round(100*e)},p=function(e,n){if(1===e)return 100;if(e===-1)return-100;var t=l(e)-n;return t<20&&t>-20?0:t<0?-50:50},x=function(e){a[e.gamepad.index]=e.gamepad,d[e.gamepad.index]=Object.assign({},t),o[e.gamepad.index]=u(d[e.gamepad.index]),i[e.gamepad.index]=e.gamepad.axes.map(function(e){return l(e)}),s[e.gamepad.index]=[]},c=function(e){var n=e.gamepad;delete a[n.index],delete d[n.index],delete o[n.index],delete i[n.index],delete s[n.index]};return e(),window.addEventListener("gamepadconnected",x),window.addEventListener("gamepaddisconnected",c),r};e.exports={initPadEvents:t}}])});