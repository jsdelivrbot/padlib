!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.padEvents=n():e.padEvents=n()}(this,function(){return function(e){function n(r){if(t[r])return t[r].exports;var a=t[r]={exports:{},id:r,loaded:!1};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}var t={};return n.m=e,n.c=t,n.p="",n(0)}([function(e,n){"use strict";var t=function(){function e(e,n){var t=[],r=!0,a=!1,d=void 0;try{for(var o,i=e[Symbol.iterator]();!(r=(o=i.next()).done)&&(t.push(o.value),!n||t.length!==n);r=!0);}catch(e){a=!0,d=e}finally{try{!r&&i.return&&i.return()}finally{if(a)throw d}}return t}return function(n,t){if(Array.isArray(n))return n;if(Symbol.iterator in Object(n))return e(n,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),r=function(){function e(){var a=function(e){var a=o[e];0===c[e].length&&(c[e]=a.axes.map(function(e){return p(e)}),u[e]=a.axes.map(function(n,t){return x(n,c[e][t])}));for(var l in a.axes){var f=x(a.axes[l],c[e][l]);if(f!==u[e][l]){var m=t(r[l],2),g=m[0],v=m[1];0===v?window.dispatchEvent(new CustomEvent("gamepad-"+g+"-x-change",{detail:{controllerIndex:e,force:f,measured:a.axes[l],rounded:p(a.axes[l])}})):window.dispatchEvent(new CustomEvent("gamepad-"+g+"-y-change",{detail:{controllerIndex:e,force:Math.abs(f),measured:a.axes[l]}})),u[e][l]=f}}for(var h in a.buttons){var b=a.buttons[h].pressed,y=i[e][h];y&&s[e][y]!==b&&(s[e][y]=b,window.dispatchEvent(new CustomEvent(d[y][b?"pressed":"released"],{detail:{controllerIndex:e}}))),n&&b&&!y&&n(h)}};for(var l in o)a(l);requestAnimationFrame(e)}var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(e){return console.warn("unmapped button index",e)},r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{0:["l-axis",0],1:["l-axis",1],2:["r-axis",0],3:["r-axis",1]},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{0:"x",1:"a",2:"b",3:"y",9:"start",8:"select",5:"rt-shoulder",7:"rb-shoulder",4:"lt-shoulder",6:"lb-shoulder",10:"l-axis",11:"r-axis",12:"up",13:"down",14:"left",15:"right"},d=["a","b","x","y","start","select","rt-shoulder","rb-shoulder","lt-shoulder","lb-shoulder","l-axis","r-axis"].reduce(function(e,n){return e[n]={pressed:"gamepad-"+n+"-pressed",released:"gamepad-"+n+"-released"},e},{}),o={},i={},s={},u={},c={},l=function(e){return Object.keys(e).reduce(function(n,t){return n[e[t]]=!1,n},{})},p=function(e){return Math.round(100*e)},x=function(e,n){if(1===e)return 100;if(e===-1)return-100;var t=p(e)-n;return t<20&&t>-20?0:t<0?-50:50},f=function(e){o[e.gamepad.index]=e.gamepad,i[e.gamepad.index]=Object.assign({},a),s[e.gamepad.index]=l(i[e.gamepad.index]),u[e.gamepad.index]=e.gamepad.axes.map(function(e){return p(e)}),c[e.gamepad.index]=[]},m=function(e){var n=e.gamepad;delete o[n.index],delete i[n.index],delete s[n.index],delete u[n.index],delete c[n.index]};return e(),window.addEventListener("gamepadconnected",f),window.addEventListener("gamepaddisconnected",m),Object.keys(d).map(function(e){return["gamepad-"+e+"-pressed","gamepad-"+e+"-released"]}).reduce(function(e,n){return e.concat(n)}).concat(["gamepad-l-axis-x-change","gamepad-l-axis-y-change","gamepad-r-axis-x-change","gamepad-r-axis-y-change"])};e.exports={initPadEvents:r}}])});